{"version":3,"sources":["App/App.module.scss","App/images/logo.svg","App/translations lazy /^/.//.*/.json$/ groupOptions: {} namespace object","App/App.tsx","App/I18nManager.tsx","App/theme.ts","App/index.ts","server/serviceWorker.ts","index.tsx"],"names":["module","exports","Logo","App-logo-spin","App","__webpack_require__","p","map","./en.json","webpackAsyncContext","req","ids","Promise","all","slice","e","then","id","t","resolve","Error","code","keys","Object","compose","withI18n","fallback","en","translations","_translations","asyncToGenerator","regenerator_default","a","mark","_callee","locale","dictionary","wrap","_context","prev","next","concat","sent","abrupt","stop","this","_x","apply","arguments","_ref","i18n","react","index_es","className","styles","element","size","translate","alt","source","logo","polarisLink","url","i18nManager","Manager","theme","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","react_default","createElement","children","dist","manager","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2925626b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"App_Logo__plgdr\",\"App-logo-spin\":\"App_App-logo-spin__36-n5\",\"App\":\"App_App___tU4h\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./en.json\": [\n\t\t115\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 500;\nmodule.exports = webpackAsyncContext;","import * as React from 'react';\n\nimport {\n  DisplayText,\n  FooterHelp,\n  Heading,\n  Image,\n  Layout,\n  Link,\n} from '@shopify/polaris';\nimport {withI18n, WithI18nProps} from '@shopify/react-i18n';\nimport {compose} from 'recompose';\n\nimport {logo} from './images';\nimport styles from './App.module.scss';\nimport en from './translations/en.json';\n\ntype ComposedProps = WithI18nProps;\n\nexport function App({i18n}: ComposedProps) {\n  return (\n    <Layout>\n      <div className={styles.App}>\n        <Heading element=\"h1\">\n          <DisplayText size=\"extraLarge\">\n            {i18n.translate('App.header')}\n          </DisplayText>\n        </Heading>\n        <Image alt=\"logo\" className={styles.Logo} source={logo} />\n        <FooterHelp>\n          {i18n.translate('App.footer', {\n            polarisLink: (\n              <Link url=\"https://polaris.shopify.com\">\n                {i18n.translate('App.polarisLink')}\n              </Link>\n            ),\n          })}\n          Built using <Link url=\"https://polaris.shopify.com\">Polaris</Link>.\n        </FooterHelp>\n      </div>\n    </Layout>\n  );\n}\n\nexport default compose<ComposedProps, {}>(\n  withI18n({\n    id: 'App',\n    fallback: en,\n    async translations(locale) {\n      const dictionary = await import(/* webpackChunkName: \"App_<hash>-i18n\" */ `./translations/${locale}.json`);\n      return dictionary;\n    },\n  }),\n)(App);\n","import * as React from 'react';\n\nimport {Provider, Manager} from '@shopify/react-i18n';\n\nexport const i18nManager = new Manager({locale: 'en'});\n\nexport default function I18nManager({children}: any) {\n  return <Provider manager={i18nManager}>{children}</Provider>;\n}\n","import {Theme} from '@shopify/polaris/types/components/ThemeProvider';\n\nimport {logo} from './images';\n\nconst theme: Theme = {\n  logo: {\n    url: logo,\n  },\n};\n\nexport default theme;\n","import App from './App';\n\nexport {default as I18nManager} from './I18nManager';\nexport {default as theme} from './theme';\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport {AppProvider} from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\n\nimport App, {I18nManager, theme} from './App';\nimport {serviceWorker} from './server';\n\nReactDOM.render(\n  <AppProvider theme={theme}>\n    <I18nManager>\n      <App />\n    </I18nManager>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}